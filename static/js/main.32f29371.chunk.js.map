{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","qtyOfPages","Math","ceil","allPages","className","cn","disabled","href","onClick","map","page","active","items","options","App","useState","setCurrentPage","setPerPage","itemsPerCurrentPage","filter","_","i","firstItemPerPage","lastItemPerPage","length","value","onChange","e","target","id","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QACH,IADYC,mBACZ,MAD0B,EAC1B,EAD6BC,EAC7B,EAD6BA,aAE3BC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAWd,EAAW,EAAGW,GAkB/B,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBR,IAA3C,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMT,EAAc,GACxB,gBAA+B,IAAhBA,EAAoB,OAAS,QAC5CU,QAzBO,WACK,IAAhBV,GAIJC,EAAaD,EAAc,IAerB,oBAWDK,EAASM,KAAI,SAAAC,GAAI,OAChB,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQb,IAAgBY,IADvD,SAIE,mBACEF,QAAS,kBAAMT,EAAaW,IAC5B,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GAJZ,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUR,IAAgBE,IAD3C,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAI,WAAMT,EAAc,GACxB,gBAAeA,IAAgBE,EAAa,OAAS,QACrDQ,QAhDU,WACdV,IAAgBE,GAIpBD,EAAaD,EAAc,IAsCrB,0BChEJc,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEdoB,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAASF,EAAQ,IAA/C,mBAAOhB,EAAP,KAAgBoB,EAAhB,KAYMC,EAJaN,EACdO,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMvB,EAAc,GAAKD,GACxCwB,EAAIvB,EAAcD,KAInByB,GAAoBxB,EAAc,GAAKD,EAAU,EACjD0B,EAAkBzB,EAAcD,EAAUe,EAAMY,OAClD1B,EAAcD,EACde,EAAMY,OAEV,OAEE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBAEIwB,EAFJ,cAE0BC,EAF1B,eAEgDX,EAAMY,OAFtD,OAKA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SAEE,wBACEqB,MAAO5B,EACP6B,SAhCW,SAACC,GACpBV,GAAYU,EAAEC,OAAOH,OACrBT,EAAe,IA+BP,UAAQ,kBACRa,GAAG,kBACHzB,UAAU,eALZ,SAOGS,EAAQJ,KAAI,SAAAqB,GAAM,OACjB,wBAAqBL,MAAOK,EAA5B,SAAqCA,GAAxBA,UAMnB,uBAAOC,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACER,MAAOgB,EAAMY,OACb3B,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACW,GAAD,OAAUM,EAAeN,MAGzC,6BACGQ,EAAoBT,KAAI,SAAAuB,GAAI,OAC3B,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCpElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.32f29371.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value:number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage = 1, onPageChange,\n}) => {\n  const qtyOfPages = Math.ceil(total / perPage);\n\n  const allPages = getNumbers(1, qtyOfPages);\n\n  const moveBack = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  };\n\n  const moveForward = () => {\n    if (currentPage === qtyOfPages) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href={`#${currentPage - 1}`}\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={moveBack}\n          >\n            «\n          </a>\n        </li>\n\n        {allPages.map(page => (\n          <li\n            className={cn('page-item', { active: currentPage === page })}\n            key={page}\n          >\n            <a\n              onClick={() => onPageChange(page)}\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn(\n          'page-item', { disabled: currentPage === qtyOfPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href={`#${currentPage + 1}`}\n            aria-disabled={currentPage === qtyOfPages ? 'true' : 'false'}\n            onClick={moveForward}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(options[1]);\n\n  const handleChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  const getItemsPerCurrentPage\n    = ():string[] => items\n      .filter((_, i) => i >= (currentPage - 1) * perPage\n      && i < currentPage * perPage);\n\n  const itemsPerCurrentPage = getItemsPerCurrentPage();\n\n  const firstItemPerPage = (currentPage - 1) * perPage + 1;\n  const lastItemPerPage = currentPage * perPage < items.length\n    ? currentPage * perPage\n    : items.length;\n\n  return (\n\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${\n          firstItemPerPage} - ${lastItemPerPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n\n          <select\n            value={perPage}\n            onChange={handleChange}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            {options.map(option => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {itemsPerCurrentPage.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}